import{_ as n,o as s,c as a,d as t}from"./app.f6b99883.js";const p={},e=t(`<h1 id="\u76EE\u7684" tabindex="-1"><a class="header-anchor" href="#\u76EE\u7684" aria-hidden="true">#</a> \u76EE\u7684</h1><p>\u6700\u8FD1\u4E24\u5929\u5728\u7ED9\u670B\u53CB\u8BB2\u89E3\u5982\u4F55\u4F7F\u7528ajax\u8C03\u7528\u63A5\u53E3\u65F6\u5019\uFF0C\u6211\u53D1\u73B0\u6211\u7528swagger\u8C03\u7528\u63A5\u53E3\u8FD4\u56DE\u7684long\u7C7B\u578B\u7684\u6570\u636E\u6700\u540E\u51E0\u4F4D\u90FD\u53D8\u6210\u4E860(\u4F8B\u5982\uFF1A6974150586715898000)\uFF0C\u672C\u6765\u662F\u4EE5\u4E3Asqlite\u6570\u636E\u5E93\u4E0D\u652F\u6301long\u7C7B\u578B\u5BFC\u81F4\u6211\u5B58\u8FDB\u53BB\u7684\u6570\u636E\u51FA\u4E86\u95EE\u9898\uFF0C\u7136\u540E\u6211\u4F7F\u7528\u63A5\u53E3\u6D4B\u8BD5\u5DE5\u5177\u8C03\u7528\u540E\u53D1\u73B0\u6570\u636E\u662F\u6B63\u786E\u7684\u3002\u7136\u540E\u60F3\u5230\u4E4B\u524D\u542C\u524D\u7AEF\u540C\u4E8B\u8BF4\u8FC7\u4ED6\u4EEC\u6CA1\u6709long\u7C7B\u578B\u4ED6\u4EEC\u4F7F\u7528\u7684\u5B57\u7B26\u4E32\u6765\u5904\u7406\u7684\u6211\u8FD4\u56DE\u7684long\u7C7B\u578B\uFF0C\u90A3\u4E48\u5C31\u601D\u8003\u5982\u4F55\u53BB\u5904\u7406swagger\u8FD9\u4E2A\u95EE\u9898\u5427\u3002</p><blockquote><p>\u8FD9\u4E2A\u8FD9\u4E24\u5929\u624D\u53D1\u73B0\uFF0C\u8BF4\u660E\u6211\u771F\u7684\u597D\u4E45\u6CA1\u6709swagger\u8C03\u7528\u63A5\u53E3\u4E86\uFF0C\u867D\u7136\u5C55\u793A\u4E86\uFF0C\u7136\u540E\u53EA\u662F\u5C55\u793A\u4E86\u3002</p></blockquote><h1 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h1><p>\u65E2\u7136\u524D\u7AEF\u540C\u4E8B\u662F\u901A\u8FC7\u5B57\u7B26\u4E32\u6765\u5904\u7406\u7684\uFF0C\u90A3\u4E48\u6211\u5F53\u7136\u4E5F\u53EF\u4EE5\u8F6C\u6210\u5B57\u7B26\u4E32\u4E4B\u540E\u518D\u8FD4\u56DE\u51FA\u53BB\u3002\u6211\u662F\u4F7F\u7528\u7684Newtonsoft.Json\u505A\u89E3\u6790Json\u7684\uFF0C\u6240\u4EE5\u4FEE\u6539\u9ED8\u8BA4\u7684\u89E3\u6790</p><p>\u9996\u5148\u6211\u4EEC\u9700\u8981\u4FEE\u6539Swashbuckle.AspNetCore.Newtonsoft\u5305\u9ED8\u8BA4\u7684\u89E3\u6790\u5904\u7406DefaultContractResolver\uFF0C\u9488\u5BF9long\u7C7B\u578B\u505A\u7279\u6B8A\u5904\u7406</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomContractResolver</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DefaultContractResolver</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// \u5BF9\u957F\u6574\u578B\u505A\u5904\u7406</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>objectType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">JsonConverter</span> <span class="token function">ResolveContractConverter</span><span class="token punctuation">(</span><span class="token class-name">Type</span> objectType<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>objectType <span class="token operator">==</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">long</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JsonConverterLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">ResolveContractConverter</span><span class="token punctuation">(</span>objectType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JsonConverterLong\u5185\u5BB9\u5982\u4E0B</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// Long\u7C7B\u578BJson\u5E8F\u5217\u5316\u91CD\u5199</span>
<span class="token doc-comment comment">/// \u5728js\u4E2D\u4F20\u8F93\u4F1A\u5BFC\u81F4\u7CBE\u5EA6\u4E22\u5931\uFF0C\u6545\u800C\u5728\u5E8F\u5217\u5316\u65F6\u8F6C\u6362\u6210\u5B57\u7B26\u7C7B\u578B</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonConverterLong</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">JsonConverter</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// \u662F\u5426\u53EF\u4EE5\u8F6C\u6362</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>objectType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">CanConvert</span><span class="token punctuation">(</span><span class="token class-name">Type</span> objectType<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// \u8BFBjson</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>reader<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>objectType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>existingValue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serializer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">ReadJson</span><span class="token punctuation">(</span><span class="token class-name">JsonReader</span> reader<span class="token punctuation">,</span> <span class="token class-name">Type</span> objectType<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span></span> existingValue<span class="token punctuation">,</span> <span class="token class-name">JsonSerializer</span> serializer<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>ValueType <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> reader<span class="token punctuation">.</span>ValueType <span class="token operator">==</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name"><span class="token keyword">long</span><span class="token punctuation">?</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> reader<span class="token punctuation">.</span>Value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            _ <span class="token operator">=</span> <span class="token keyword">long</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>Value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">?</span> reader<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">long</span></span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// \u5199json</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>writer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serializer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WriteJson</span><span class="token punctuation">(</span><span class="token class-name">JsonWriter</span> writer<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token class-name">JsonSerializer</span> serializer<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            writer<span class="token punctuation">.</span><span class="token function">WriteValue</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            writer<span class="token punctuation">.</span><span class="token function">WriteValue</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7F16\u5199\u7ED3\u675F\u4E4B\u540E\u6211\u4EEC\u8FD8\u9700\u8981\u8FDB\u884C\u914D\u7F6E\u4E5F\u5C31\u662F\u8BBE\u7F6ESerializerSettings</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">AddNewtonsoftJson</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u65F6\u95F4\u683C\u5F0F\u5316</span>
    options<span class="token punctuation">.</span>SerializerSettings<span class="token punctuation">.</span>DateFormatString <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">;</span>
    
    <span class="token comment">//swagger\u663E\u793A\u679A\u4E3E</span>
    options<span class="token punctuation">.</span>SerializerSettings<span class="token punctuation">.</span>Converters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">StringEnumConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u8BBE\u7F6E\u81EA\u5B9A\u4E49\u5E8F\u5217\u5316</span>
    options<span class="token punctuation">.</span>SerializerSettings<span class="token punctuation">.</span>ContractResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CustomContractResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u518D\u6B21\u4F7F\u7528swagger\u754C\u9762\u8C03\u7528\u8FD4\u56DE\u503C\u5DF2\u7ECF\u53D8\u6210\u4E866974150586715897857\uFF0C\u6210\u529F\u89E3\u51B3\u95EE\u9898\u3002</p><h1 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h1><p>\u5173\u4E8E\u8FD9\u4E2A\u7CBE\u5EA6\u4E22\u5931\u7684\u95EE\u9898\u8FD9\u6B21\u662F\u7B2C\u4E8C\u6B21\u9047\u5230\u4E86\uFF0C\u4E0A\u6B21\u662F\u4F7F\u7528Apifox\u5347\u7EA7\u4E4B\u540E\u5C31\u51FA\u73B0\u4E86\u8FD9\u4E2A\u95EE\u9898\uFF0C\u7136\u540E\u6211\u8FD8\u53BB\u63D0\u4E86bug\uFF0C\u7ED3\u679C\u662F\u56E0\u4E3A\u66F4\u65B0\u4E4B\u540E\u51FA\u6765\u4E86\u4E00\u4E2A\u517C\u5BB9bigint\u7684\u5F00\u5173\u5E76\u4E14\u9ED8\u8BA4\u662F\u5173\u95ED\u72B6\u6001\u3002</p>`,14),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","swagger-long.html.vue"]]);export{k as default};
