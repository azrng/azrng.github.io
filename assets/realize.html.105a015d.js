import{_ as n,o as s,c as a,d as t}from"./app.f6b99883.js";const p={},e=t(`<h1 id="\u8FC7\u6EE4\u5668\u5E38\u89C1\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u8FC7\u6EE4\u5668\u5E38\u89C1\u64CD\u4F5C" aria-hidden="true">#</a> \u8FC7\u6EE4\u5668\u5E38\u89C1\u64CD\u4F5C</h1><h1 id="_1\u3001\u5F02\u5E38\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5F02\u5E38\u5904\u7406" aria-hidden="true">#</a> 1\u3001\u5F02\u5E38\u5904\u7406</h1><h2 id="\u76EE\u7684" tabindex="-1"><a class="header-anchor" href="#\u76EE\u7684" aria-hidden="true">#</a> \u76EE\u7684</h2><p>\u901A\u8FC7\u5F02\u5E38\u8FC7\u6EE4\u5668\u5B9E\u73B0\u4E1A\u52A1\u5F02\u5E38\u6355\u6349</p><h2 id="\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C" aria-hidden="true">#</a> \u64CD\u4F5C</h2><p>\u5F15\u7528\u8F85\u52A9\u5305</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;AzrngCommon&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.2.6&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E3B\u8981\u4F7F\u7528\u8BE5\u5305\u5185\u7684\u8FD4\u56DE\u7C7B</p><p>\u8FC7\u6EE4\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u81EA\u5B9A\u4E49\u5168\u5C40\u5F02\u5E38\u8FC7\u6EE4\u5668</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomExceptionFilter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IExceptionFilter</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IWebHostEnvironment</span> _hostEnvironment<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>CustomExceptionFilter<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">CustomExceptionFilter</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>CustomExceptionFilter<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">,</span>
        <span class="token class-name">IWebHostEnvironment</span> hostEnvironment<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
        _hostEnvironment <span class="token operator">=</span> hostEnvironment<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnException</span><span class="token punctuation">(</span><span class="token class-name">ExceptionContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//\u5982\u679C\u5F02\u5E38\u6CA1\u6709\u5904\u7406</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>ExceptionHandled<span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResultModel</span>
        <span class="token punctuation">{</span>
            Code <span class="token operator">=</span> <span class="token string">&quot;500&quot;</span><span class="token punctuation">,</span>
            IsSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            Message <span class="token operator">=</span> <span class="token string">&quot;\u7CFB\u7EDF\u5F02\u5E38\uFF0C\u8BF7\u8054\u7CFB\u7BA1\u7406\u5458&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogError</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;\u5F02\u5E38 path:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>Result</span><span class="token punctuation">}</span></span><span class="token string"> message:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>Message</span><span class="token punctuation">}</span></span><span class="token string"> StackTrace:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>StackTrace</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>_hostEnvironment<span class="token punctuation">.</span><span class="token function">IsDevelopment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span>Message <span class="token operator">+=</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> context<span class="token punctuation">.</span>Exception<span class="token punctuation">.</span>Message<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JsonResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5F02\u5E38\u5DF2\u5904\u7406</span>
        context<span class="token punctuation">.</span>ExceptionHandled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5168\u5C40\u4F7F\u7528</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span>option <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u6DFB\u52A0\u5168\u5C40\u8FC7\u6EE4\u5668</span>
    option<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">CustomExceptionFilter</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u4E0D\u80FD\u62E6\u622A\u5904\u7406Action\u4EE5\u5916\u7684\u9519\u8BEF\u3002</p><h1 id="_2\u3001\u8FD4\u56DE\u7C7B\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u8FD4\u56DE\u7C7B\u5904\u7406" aria-hidden="true">#</a> 2\u3001\u8FD4\u56DE\u7C7B\u5904\u7406</h1><h2 id="\u76EE\u7684-1" tabindex="-1"><a class="header-anchor" href="#\u76EE\u7684-1" aria-hidden="true">#</a> \u76EE\u7684</h2><p>\u901A\u8FC7\u8FD4\u56DE\u8FC7\u6EE4\u5668\u5B9E\u73B0\u8FD4\u56DE\u7C7B\u7684\u5904\u7406\uFF0C\u5728\u6700\u5916\u5C42\u5305\u4E00\u5C42\u516C\u5171\u8FD4\u56DE\u7C7B\u3002</p><h2 id="\u64CD\u4F5C-1" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C-1" aria-hidden="true">#</a> \u64CD\u4F5C</h2><p>\u51C6\u5907</p><p>\u91CC\u9762\u7684ResultModel\u4F7F\u7528\u7684\u662Fnuget\u7684\u4E1C\u897F</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;AzrngCommon&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;1.2.4&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD4\u56DE\u8FC7\u6EE4\u5668\u5904\u7406</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u65B9\u6848\u4E00\uFF1A\u8FD4\u56DE\u7C7B\u5904\u7406(\u8BA9\u8FD4\u56DE\u7ED3\u679C\u5916\u9762\u5305\u4E00\u5C42\u516C\u5171\u4E1A\u52A1\u8FD4\u56DE\u7C7B)</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">AttributeUsage</span><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>All<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomResultPackFilter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span><span class="token punctuation">,</span> <span class="token class-name">IResultFilter</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnResultExecuted</span><span class="token punctuation">(</span><span class="token class-name">ResultExecutedContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnResultExecuting</span><span class="token punctuation">(</span><span class="token class-name">ResultExecutingContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>Result <span class="token keyword">is</span> <span class="token class-name">EmptyResult</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OkObjectResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResultModel</span>
            <span class="token punctuation">{</span>
                Code <span class="token operator">=</span> <span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span>
                IsSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                Message <span class="token operator">=</span> <span class="token string">&quot;\u6210\u529F&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OkObjectResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResultModel<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">{</span>
            Code <span class="token operator">=</span> <span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span>
            IsSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            Data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ObjectResult<span class="token punctuation">)</span>context<span class="token punctuation">.</span>Result<span class="token punctuation">)</span><span class="token punctuation">.</span>Value
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u65B9\u6848\u4E8C\uFF1A\u8FD4\u56DE\u7C7B\u5904\u7406(\u8BA9\u8FD4\u56DE\u7ED3\u679C\u5916\u9762\u5305\u4E00\u5C42\u516C\u5171\u4E1A\u52A1\u8FD4\u56DE\u7C7B\u589E\u52A0\u8FD4\u56DEcode\u548C\u6D88\u606F)</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">AttributeUsage</span><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>All<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomResultPack2Filter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ActionFilterAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReturnDataFilterAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ActionFilterAttribute</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnActionExecuted</span><span class="token punctuation">(</span><span class="token class-name">ActionExecutedContext</span> context<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>Result <span class="token keyword">is</span> <span class="token class-name">EmptyResult</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OkObjectResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResultModel</span>
                <span class="token punctuation">{</span>
                    Code <span class="token operator">=</span> <span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span>
                    IsSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                    Message <span class="token operator">=</span> <span class="token string">&quot;\u6210\u529F&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OkObjectResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ResultModel<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span>
            <span class="token punctuation">{</span>
                Code <span class="token operator">=</span> <span class="token string">&quot;200&quot;</span><span class="token punctuation">,</span>
                IsSuccess <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                Data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ObjectResult<span class="token punctuation">)</span>context<span class="token punctuation">.</span>Result<span class="token punctuation">)</span><span class="token punctuation">.</span>Value
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u518C\u5168\u5C40\u8FC7\u6EE4\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span> 
<span class="token punctuation">{</span>
    option<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">CustomResultPackFilter</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3\u3001\u5165\u53C2\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u5165\u53C2\u6821\u9A8C" aria-hidden="true">#</a> 3\u3001\u5165\u53C2\u6821\u9A8C</h1><h2 id="\u76EE\u7684-2" tabindex="-1"><a class="header-anchor" href="#\u76EE\u7684-2" aria-hidden="true">#</a> \u76EE\u7684</h2><p>\u901A\u8FC7Action\u8FC7\u6EE4\u5668\u5B9E\u73B0\u5BF9\u4E00\u4E9B\u5E38\u89C1\u7684\u8BF7\u6C42\u5165\u53C2\u7684\u6821\u9A8C\u3002\u6BD4\u5982\u6211\u4EEC\u7684\u63A5\u53E3\u4E2D\u7ECF\u5E38\u6709\u60A3\u8005ID\u5B57\u6BB5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5168\u5C40\u5BF9\u8BE5\u5B57\u6BB5\u8FDB\u884C\u9650\u5236\u3002</p><h2 id="\u64CD\u4F5C-2" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C-2" aria-hidden="true">#</a> \u64CD\u4F5C</h2><p>\u7F16\u5199\u8FC7\u6EE4\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u5BF9\u6A21\u578B\u9A8C\u8BC1\u8FC7\u6EE4\u5668</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModelValidationFilter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ActionFilterAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u5B9E\u73B0\u76EE\u7684\uFF1A\u6BD4\u5982\u63A5\u53E3\u4E2D\u7684\u5E38\u7528\u53C2\u6570\u6709\u60A3\u8005ID\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5199\u8FC7\u6EE4\u5668\u7EDF\u4E00\u6821\u9A8C\u60A3\u8005ID\u662F\u5426\u6709\u6548</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>ModelValidationFilter<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">ModelValidationFilter</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>ModelValidationFilter<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnActionExecuting</span><span class="token punctuation">(</span><span class="token class-name">ActionExecutingContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">.</span>ModelState<span class="token punctuation">.</span>IsValid<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BadRequestObjectResult</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>ModelState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Query<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span><span class="token string">&quot;patientId&quot;</span><span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">StringValues</span> patientIdValue<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>patientIdValue<span class="token punctuation">.</span><span class="token function">FirstOrDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">int</span></span> patientId<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>patientId <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogWarning</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Path</span><span class="token punctuation">}</span></span><span class="token string"> \u60A3\u8005\u6807\u8BC6\u65E0\u6548&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BadRequestObjectResult</span><span class="token punctuation">(</span><span class="token string">&quot;\u60A3\u8005\u6807\u8BC6\u65E0\u6548&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method <span class="token operator">==</span> <span class="token string">&quot;POST&quot;</span> <span class="token operator">||</span> context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method <span class="token operator">==</span> <span class="token string">&quot;PUT&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8BFB\u53D6\u5230Body\u540E\uFF0C\u91CD\u65B0\u8BBE\u7F6EStream\u5230\u8D77\u59CB\u4F4D\u7F6E</span>
            <span class="token class-name"><span class="token keyword">var</span></span> stream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">string</span></span> body <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">ReadToEndAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">JObject</span> jobject <span class="token operator">=</span> JObject<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>jobject<span class="token punctuation">[</span><span class="token string">&quot;patientId&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">int</span></span> patientId<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>patientId <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    _logger<span class="token punctuation">.</span><span class="token function">LogWarning</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Path</span><span class="token punctuation">}</span></span><span class="token string"> \u60A3\u8005\u6807\u8BC6\u65E0\u6548&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">BadRequestObjectResult</span><span class="token punctuation">(</span><span class="token string">&quot;\u60A3\u8005\u6807\u8BC6\u65E0\u6548&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8BFB\u53D6\u5230Body\u540E\uFF0C\u91CD\u65B0\u8BBE\u7F6EStream\u5230\u8D77\u59CB\u4F4D\u7F6E</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5168\u5C40\u4F7F\u7528</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span>option <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u6DFB\u52A0\u5168\u5C40\u8FC7\u6EE4\u5668</span>
    option<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ModelValidationFilter</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u8BBE\u8BA1\u5230\u8BFB\u53D6\u8BF7\u6C42\u4F53\u7684\u64CD\u4F5C\uFF0C\u8FD8\u9700\u8981\u501F\u52A9\u4E2D\u95F4\u4EF6\u6765\u8BBE\u7F6E\u53EF\u4EE5\u91CD\u590D\u8BFB\u53D6\u6D41</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">//\u8BFB\u53D6\u8BF7\u6C42\u4F53\u8BBE\u7F6E\u53EF\u4EE5\u91CD\u590D\u8BFB\u53D6</span>
app<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
 <span class="token punctuation">{</span>
     context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">EnableBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3-1" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-1" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u53EF\u4EE5\u5B9E\u73B0URL\u3001\u8BF7\u6C42\u4F53\u4E2D\u53C2\u6570\u6821\u9A8C\u3002</p><h1 id="_4\u3001\u65E5\u5FD7\u8BB0\u5F55" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u65E5\u5FD7\u8BB0\u5F55" aria-hidden="true">#</a> 4\u3001\u65E5\u5FD7\u8BB0\u5F55</h1><h2 id="\u76EE\u7684-3" tabindex="-1"><a class="header-anchor" href="#\u76EE\u7684-3" aria-hidden="true">#</a> \u76EE\u7684</h2><p>\u901A\u8FC7Action\u8FC7\u6EE4\u5668\u5B9E\u73B0\u5BF9\u8BF7\u6C42\u65E5\u5FD7\u7684\u8BB0\u5F55\u3002</p><h2 id="\u64CD\u4F5C-3" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C-3" aria-hidden="true">#</a> \u64CD\u4F5C</h2><p>\u7F16\u5199\u8FC7\u6EE4\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u65E5\u5FD7\u8BB0\u5F55</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestParamRecordFilter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ActionFilterAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u76EE\u7684\uFF1A\u8BB0\u5F55\u8BF7\u6C42\u7684\u6D88\u606F</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">ILogger<span class="token punctuation">&lt;</span>ModelValidationFilter<span class="token punctuation">&gt;</span></span> _logger<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">RequestParamRecordFilter</span><span class="token punctuation">(</span><span class="token class-name">ILogger<span class="token punctuation">&lt;</span>ModelValidationFilter<span class="token punctuation">&gt;</span></span> logger<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _logger <span class="token operator">=</span> logger<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnActionExecuting</span><span class="token punctuation">(</span><span class="token class-name">ActionExecutingContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//\u8BBE\u7F6E\u53EF\u4EE5\u591A\u6B21\u8BFB\u53D6</span>
        context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8BFB\u53D6\u5230Body\u540E\uFF0C\u91CD\u65B0\u8BBE\u7F6EStream\u5230\u8D77\u59CB\u4F4D\u7F6E</span>
        <span class="token class-name"><span class="token keyword">var</span></span> sr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamReader</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> data <span class="token operator">=</span>  sr<span class="token punctuation">.</span><span class="token function">ReadToEndAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span>
            <span class="token interpolation-string"><span class="token string">$&quot;Time:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">DateTime<span class="token punctuation">.</span>Now</span><span class="token format-string"><span class="token punctuation">:</span>yyyy-MM-dd HH:mm:ss</span><span class="token punctuation">}</span></span><span class="token string"> requestUrl:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Path</span><span class="token punctuation">}</span></span><span class="token string">  Method:</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method</span><span class="token punctuation">}</span></span><span class="token string">  requestBodyData: &quot;</span></span> <span class="token operator">+</span>
            data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8BFB\u53D6\u5230Body\u540E\uFF0C\u91CD\u65B0\u8BBE\u7F6EStream\u5230\u8D77\u59CB\u4F4D\u7F6E</span>
        context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> SeekOrigin<span class="token punctuation">.</span>Begin<span class="token punctuation">)</span><span class="token punctuation">;</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Host: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Host<span class="token punctuation">.</span>Host</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _logger<span class="token punctuation">.</span><span class="token function">LogInformation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Client IP: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Connection<span class="token punctuation">.</span>RemoteIpAddress</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5168\u5C40\u4F7F\u7528</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span>option <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u6DFB\u52A0\u5168\u5C40\u8FC7\u6EE4\u5668</span>
    option<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">RequestParamRecordFilter</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u6D89\u53CA\u5230\u8BFB\u53D6\u8BF7\u6C42\u4F53\u7684\u64CD\u4F5C\uFF0C\u8FD8\u9700\u8981\u501F\u52A9\u4E2D\u95F4\u4EF6\u6765\u8BBE\u7F6E\u53EF\u4EE5\u91CD\u590D\u8BFB\u53D6\u6D41</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">//\u8BFB\u53D6\u8BF7\u6C42\u4F53\u8BBE\u7F6E\u53EF\u4EE5\u91CD\u590D\u8BFB\u53D6</span>
app<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
 <span class="token punctuation">{</span>
     context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">EnableBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> <span class="token function">next</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>info<span class="token punctuation">:</span> NetCoreFilterSample<span class="token punctuation">.</span>CustomFilter<span class="token punctuation">.</span>ModelValidationFilter<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      Time<span class="token punctuation">:</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">19</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">07</span><span class="token punctuation">:</span><span class="token number">04</span> requestUrl<span class="token punctuation">:</span><span class="token operator">/</span>api<span class="token operator">/</span>WeatherForecast<span class="token operator">/</span><span class="token class-name">AddPatientEat</span>  Method<span class="token punctuation">:</span><span class="token class-name">POST</span>  requestBodyData<span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;patientId&quot;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token string">&quot;eat&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;string222&quot;</span>
      <span class="token punctuation">}</span>
info<span class="token punctuation">:</span> NetCoreFilterSample<span class="token punctuation">.</span>CustomFilter<span class="token punctuation">.</span>ModelValidationFilter<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      Host<span class="token punctuation">:</span> <span class="token class-name">localhost</span>
info<span class="token punctuation">:</span> NetCoreFilterSample<span class="token punctuation">.</span>CustomFilter<span class="token punctuation">.</span>ModelValidationFilter<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
      <span class="token class-name">Client</span> IP<span class="token punctuation">:</span> <span class="token punctuation">::</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3-2" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-2" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u53EF\u4EE5\u5B9E\u73B0\u8BF7\u6C42\u5730\u5740\u5165\u53C2\u7B49\u53C2\u6570\u8BB0\u5F55\u3002</p><h1 id="_5\u3001\u5E42\u7B49\u6027" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u5E42\u7B49\u6027" aria-hidden="true">#</a> 5\u3001\u5E42\u7B49\u6027</h1><h2 id="\u76EE\u7684-4" tabindex="-1"><a class="header-anchor" href="#\u76EE\u7684-4" aria-hidden="true">#</a> \u76EE\u7684</h2><p>\u901A\u8FC7\u8BF7\u6C42\u5730\u5740\u4F5C\u4E3Akey\uFF0C\u642D\u914D\u5185\u5B58\u7F13\u5B58\uFF0C\u5B9E\u73B0\u5E42\u7B49\u6027\u6821\u9A8C\u3002</p><h2 id="\u64CD\u4F5C-4" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C-4" aria-hidden="true">#</a> \u64CD\u4F5C</h2><p>\u56E0\u4E3A\u672C\u6587\u4F7F\u7528\u5230\u4E86IMemoryCache\uFF0C\u6240\u4EE5\u8FD8\u9700\u8981\u6CE8\u5165\u8BE5\u670D\u52A1</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddMemoryCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7F16\u5199\u8FC7\u6EE4\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u63A5\u53E3\u5E42\u7B49\u6027\u5904\u7406</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IdempotentAttributeFilter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span><span class="token punctuation">,</span> <span class="token class-name">IActionFilter</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IMemoryCache</span> _cache<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">IdempotentAttributeFilter</span><span class="token punctuation">(</span><span class="token class-name">IMemoryCache</span> cache<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _cache <span class="token operator">=</span> cache<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnActionExecuted</span><span class="token punctuation">(</span><span class="token class-name">ActionExecutedContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnActionExecuting</span><span class="token punctuation">(</span><span class="token class-name">ActionExecutingContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//\u53EF\u4EE5\u6839\u636E\u7528\u6237ID\u6216\u8005\u8BF7\u6C42\u5730\u5740\u6807\u8BC6\u5F53\u524D\u7528\u6237</span>
        <span class="token class-name"><span class="token keyword">var</span></span> path <span class="token operator">=</span> context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Path<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> userId <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span><span class="token comment">//\u8FD9\u4E2A\u53EF\u4EE5\u4ECE\u4E0A\u4E0B\u6587\u4E2D\u83B7\u53D6</span>

        <span class="token class-name"><span class="token keyword">var</span></span> key <span class="token operator">=</span> <span class="token string">&quot;IdempotencyKey&quot;</span> <span class="token operator">+</span> userId <span class="token operator">+</span> path<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> method <span class="token operator">=</span> context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">==</span> <span class="token string">&quot;POST&quot;</span> <span class="token operator">||</span> method <span class="token operator">==</span> <span class="token string">&quot;put&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">//\u76F4\u63A5\u9650\u5236\u4E86\u8BE5\u63A5\u53E3\u4E0D\u5141\u8BB8\u4E00\u4E2A\u7528\u6237\u57282\u79D2\u5185\u8BF7\u6C42\u591A\u6B21</span>
            <span class="token class-name"><span class="token keyword">var</span></span> cacheData <span class="token operator">=</span> _cache<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cacheData <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ParameterException</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u5141\u8BB8\u91CD\u590D\u63D0\u4EA4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            _cache<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u66F4\u5408\u9002\u7684\u5199\u6CD5\u662F\uFF0C\u4F7F\u7528redis(\u53EF\u4EE5\u4E0D\u6015\u670D\u52A1\u90E8\u7F72\u591A\u4E2A\u8282\u70B9)\uFF0C\u7136\u540E\u6839\u636E\u7528\u6237\u6807\u8BC6\u4F5C\u4E3Akey\uFF0C\u5E76\u4E14\u4E5F\u8981\u68C0\u9A8C\u5F53\u524D\u8BF7\u6C42\u4F53\u7684\u5185\u5BB9\u662F\u4E0D\u662F\u4E5F\u4E0A\u4E00\u6B21\u4E5F\u4E00\u6837\u3002</p><p>\u5168\u5C40\u4F7F\u7528</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span>option <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">//\u6DFB\u52A0\u5168\u5C40\u8FC7\u6EE4\u5668</span>
    option<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">IdempotentAttributeFilter</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3-3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5C06\u4E0D\u5E26\u5E42\u7B49\u6027\u7684\u63A5\u53E3(Post\u3001Put)\uFF0C\u589E\u52A0\u9650\u5236\u4E00\u4E2A\u7528\u6237\u57282\u79D2\u5185\u53EA\u80FD\u8BF7\u6C421\u6B21\uFF0C\u9632\u6B62\u91CD\u590D\u63D0\u4EA4\u3002</p><h1 id="_6\u3001\u57FA\u4E8Eip\u8BF7\u6C42\u9650\u5236" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u57FA\u4E8Eip\u8BF7\u6C42\u9650\u5236" aria-hidden="true">#</a> 6\u3001\u57FA\u4E8EIP\u8BF7\u6C42\u9650\u5236</h1><h2 id="\u76EE\u7684-5" tabindex="-1"><a class="header-anchor" href="#\u76EE\u7684-5" aria-hidden="true">#</a> \u76EE\u7684</h2><p>\u9650\u5236\u6BCF\u4E00\u4E2Aip\u5BA2\u6237\u7AEF\u5728\u6307\u5B9A\u7684\u65F6\u95F4\u8303\u56F4\u5185\u8BF7\u6C42\u7684\u6570\u91CF\uFF0C\u9632\u6B62\u6076\u610F\u653B\u51FB\u3002</p><h2 id="\u64CD\u4F5C-5" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C-5" aria-hidden="true">#</a> \u64CD\u4F5C</h2><p>\u589E\u52A0\u8BF7\u6C42\u9650\u5236\u8FC7\u6EE4\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u6839\u636Eip\u63A5\u53E3\u8BF7\u6C42\u9650\u5236</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">AttributeUsage</span><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestLimitFilter</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ActionFilterAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> LimitRequestNum <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Seconds <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token return-type class-name">MemoryCache</span> _cache <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryCache</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MemoryCacheOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// \u8BF7\u6C42\u9650\u5236\u5C5E\u6027</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>key<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>limitRequestNum<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u9650\u5236\u7684\u6B21\u6570<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>seconds<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u9650\u5236\u65F6\u95F4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token function">RequestLimitFilter</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> limitRequestNum <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> seconds <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        LimitRequestNum <span class="token operator">=</span> limitRequestNum<span class="token punctuation">;</span>
        Seconds <span class="token operator">=</span> seconds<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnActionExecuting</span><span class="token punctuation">(</span><span class="token class-name">ActionExecutingContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> ipAddress <span class="token operator">=</span> context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Connection<span class="token punctuation">.</span>RemoteIpAddress<span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> key <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Name</span><span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">ipAddress</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">var</span></span> prevReqCount <span class="token operator">=</span> _cache<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Get</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prevReqCount <span class="token operator">&gt;=</span> LimitRequestNum<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            context<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ContentResult</span>
            <span class="token punctuation">{</span>
                Content <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;Request limit is exceeded. Try again in </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Seconds</span><span class="token punctuation">}</span></span><span class="token string"> seconds.&quot;</span></span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span>HttpContext<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>StatusCode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>HttpStatusCode<span class="token punctuation">.</span>TooManyRequests<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            _cache<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span>prevReqCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span>Seconds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u7684\u65F6\u5019\u53EA\u9700\u8981\u5728\u63A5\u53E3\u5934\u90E8\u589E\u52A0</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RequestLimit</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;DataGet&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span>WeatherForecast<span class="token punctuation">&gt;</span></span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token range operator">..</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3-4" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3-4" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u901A\u8FC7\u501F\u52A9\u5185\u5B58\u7F13\u5B58\u6765\u5B58\u50A8\uFF0C\u5B9E\u73B0\u8BF7\u6C42\u9650\u5236\u3002</p><h1 id="\u6700\u540E\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u6700\u540E\u603B\u7ED3" aria-hidden="true">#</a> \u6700\u540E\u603B\u7ED3</h1><p>\u4E0A\u9762\u53EA\u662F\u5217\u4E3E\u4E86\u4E00\u90E8\u5206\u4F7F\u7528\u573A\u666F\uFF0C\u6709\u4E9B\u573A\u666F\u6216\u8BB8\u4F7F\u7528\u4E2D\u95F4\u4EF6\u5904\u7406\u66F4\u52A0\u5408\u9002\uFF0C\u8FD9\u4E2A\u9700\u8981\u81EA\u884C\u5224\u65AD\u3002\u8FD8\u53EF\u4EE5\u505A\u533F\u540D\u5316\u5904\u7406\u7B49\u3002</p>`,76),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","realize.html.vue"]]);export{k as default};
